/*
 * RCC.hpp
 *
 *  Created on: Apr 1, 2025
 *      Author: ziad
 */

#ifndef MCAL_RCC_RCC_HPP_
#define MCAL_RCC_RCC_HPP_

/* --------------- includes --------------- */
#include "../../LIB/common.hpp"

namespace RCC {
	namespace Register{
		constexpr StdType::uint32 CR 		= (baseAddressesPeripheral::RCC + 0x000);
		constexpr StdType::uint32 CFGR 		= (baseAddressesPeripheral::RCC + 0x004);
		constexpr StdType::uint32 CIR 		= (baseAddressesPeripheral::RCC + 0x008);
		constexpr StdType::uint32 APB2RSTR 	= (baseAddressesPeripheral::RCC + 0x00C);
		constexpr StdType::uint32 APB1RSTR 	= (baseAddressesPeripheral::RCC + 0x010);
		constexpr StdType::uint32 AHBENR 	= (baseAddressesPeripheral::RCC + 0x014);
		constexpr StdType::uint32 APB2ENR 	= (baseAddressesPeripheral::RCC + 0x018);
		constexpr StdType::uint32 APB1ENR 	= (baseAddressesPeripheral::RCC + 0x01C);
		constexpr StdType::uint32 BDCR 		= (baseAddressesPeripheral::RCC + 0x020);
		constexpr StdType::uint32 CSR 		= (baseAddressesPeripheral::RCC + 0x024);
		constexpr StdType::uint32 AHBSTR 	= (baseAddressesPeripheral::RCC + 0x028);
		constexpr StdType::uint32 CFGR2 	= (baseAddressesPeripheral::RCC + 0x02C);
	}

	enum class CR {
		HSION, HSIRDY,
		HSITRIM0 = 3, HSITRIM1, HSITRIM2, HSITRIM3, HSITRIM4,
		HSICAL0, HSICAL1, HSICAL2, HSICAL3, HSICAL4, HSICAL5, HSICAL6, HSICAL7,
		HSEON, HSERD, HSEBYP,
		CSSON,
		PLLON = 24, PLLRDY,
		PLL2ON, PLL2RDY,
		PLL3ON, PLL3RDY
	};

	enum class CFGR {
		SW0, SW1,
		SWS0, SWS1,
		HPRE0, HPRE1, HPRE2, HPRE3,
		PPRE10, PPRE11, PPRE12,
		PPRE20, PPRE21, PPRE22,
		ADC_PRE0, ADC_PRE1,
		PLLSRC, PLLXTPRE, PLLMUL0, PLLMUL1, PLLMUL2, PLLMUL3,
		OTGFSPRE,
		MCO0 = 24, MCO1, MCO2, MCO3
	};

	enum class CIR{

	};
}



#endif /* MCAL_RCC_RCC_HPP_ */
